
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Globalization;

using jsval = JSApi.jsval;

public class System_DateTimeGenerated
{

////////////////////// DateTime ///////////////////////////////////////
// constructors

static bool DateTime_DateTime1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 1)
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.DateTime(arg0));
    }

    return true;
}

static bool DateTime_DateTime2(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 3)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.DateTime(arg0, arg1, arg2));
    }

    return true;
}

static bool DateTime_DateTime3(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 6)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg4 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg5 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.DateTime(arg0, arg1, arg2, arg3, arg4, arg5));
    }

    return true;
}

static bool DateTime_DateTime4(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 7)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg4 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg5 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg6 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.DateTime(arg0, arg1, arg2, arg3, arg4, arg5, arg6));
    }

    return true;
}

static bool DateTime_DateTime5(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 4)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Globalization.Calendar arg3 = (System.Globalization.Calendar)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.DateTime(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool DateTime_DateTime6(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 7)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg4 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg5 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Globalization.Calendar arg6 = (System.Globalization.Calendar)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.DateTime(arg0, arg1, arg2, arg3, arg4, arg5, arg6));
    }

    return true;
}

static bool DateTime_DateTime7(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 8)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg4 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg5 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg6 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Globalization.Calendar arg7 = (System.Globalization.Calendar)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.DateTime(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7));
    }

    return true;
}

static bool DateTime_DateTime8(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 2)
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        System.DateTimeKind arg1 = (System.DateTimeKind)JSApi.getEnum((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.DateTime(arg0, arg1));
    }

    return true;
}

static bool DateTime_DateTime9(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 7)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg4 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg5 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.DateTimeKind arg6 = (System.DateTimeKind)JSApi.getEnum((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.DateTime(arg0, arg1, arg2, arg3, arg4, arg5, arg6));
    }

    return true;
}

static bool DateTime_DateTime10(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 8)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg4 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg5 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg6 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.DateTimeKind arg7 = (System.DateTimeKind)JSApi.getEnum((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.DateTime(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7));
    }

    return true;
}

static bool DateTime_DateTime11(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 9)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg2 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg3 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg4 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg5 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg6 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Globalization.Calendar arg7 = (System.Globalization.Calendar)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.DateTimeKind arg8 = (System.DateTimeKind)JSApi.getEnum((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new System.DateTime(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8));
    }

    return true;
}

// fields
static void DateTime_MaxValue(JSVCall vc)
{
        var result = System.DateTime.MaxValue;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void DateTime_MinValue(JSVCall vc)
{
        var result = System.DateTime.MinValue;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}

// properties
static void DateTime_Date(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.Date;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void DateTime_Month(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.Month;
        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void DateTime_Day(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.Day;
        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void DateTime_DayOfWeek(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.DayOfWeek;
        JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
}
static void DateTime_DayOfYear(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.DayOfYear;
        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void DateTime_TimeOfDay(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.TimeOfDay;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void DateTime_Hour(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.Hour;
        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void DateTime_Minute(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.Minute;
        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void DateTime_Second(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.Second;
        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void DateTime_Millisecond(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.Millisecond;
        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void DateTime_Now(JSVCall vc)
{
        var result = System.DateTime.Now;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void DateTime_Ticks(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.Ticks;
        JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(result));
}
static void DateTime_Today(JSVCall vc)
{
        var result = System.DateTime.Today;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void DateTime_UtcNow(JSVCall vc)
{
        var result = System.DateTime.UtcNow;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void DateTime_Year(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.Year;
        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(result));
}
static void DateTime_Kind(JSVCall vc)
{
        System.DateTime _this = (System.DateTime)vc.csObj;
        var result = _this.Kind;
        JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
}

// methods

static bool DateTime_Add__TimeSpan(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.TimeSpan arg0 = (System.TimeSpan)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.Add(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_AddDays__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.AddDays(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_AddHours__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.AddHours(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_AddMilliseconds__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.AddMilliseconds(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_AddMinutes__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.AddMinutes(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_AddMonths__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.AddMonths(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_AddSeconds__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.AddSeconds(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_AddTicks__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.AddTicks(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_AddYears__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.AddYears(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_CompareTo__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(argThis.CompareTo(arg0)));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_CompareTo__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(argThis.CompareTo(arg0)));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_Equals__Object(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object arg0 = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(argThis.Equals(arg0)));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_Equals__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(argThis.Equals(arg0)));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_GetDateTimeFormats__Char__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;            var arrRet = (System.String[])argThis.GetDateTimeFormats(arg0, arg1);
    for (int i = 0; arrRet != null && i < arrRet.Length; i++)
    {
        JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
        JSApi.moveSaveID2Arr(i);
    }
    JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_GetDateTimeFormats__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.IFormatProvider arg0 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;            var arrRet = (System.String[])argThis.GetDateTimeFormats(arg0);
    for (int i = 0; arrRet != null && i < arrRet.Length; i++)
    {
        JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
        JSApi.moveSaveID2Arr(i);
    }
    JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_GetDateTimeFormats__Char(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Char arg0 = (System.Char)JSApi.getChar((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;            var arrRet = (System.String[])argThis.GetDateTimeFormats(arg0);
    for (int i = 0; arrRet != null && i < arrRet.Length; i++)
    {
        JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
        JSApi.moveSaveID2Arr(i);
    }
    JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_GetDateTimeFormats(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;            var arrRet = (System.String[])argThis.GetDateTimeFormats();
    for (int i = 0; arrRet != null && i < arrRet.Length; i++)
    {
        JSApi.setStringS((int)JSApi.SetType.SaveAndTempTrace, arrRet[i]);
        JSApi.moveSaveID2Arr(i);
    }
    JSApi.setArrayS((int)JSApi.SetType.Rval, (arrRet != null ? arrRet.Length : 0), true);
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_GetHashCode(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(argThis.GetHashCode()));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_GetTypeCode(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setEnum((int)JSApi.SetType.Rval, (int)argThis.GetTypeCode());
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_IsDaylightSavingTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(argThis.IsDaylightSavingTime()));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_Subtract__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.Subtract(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_Subtract__TimeSpan(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.TimeSpan arg0 = (System.TimeSpan)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.Subtract(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToBinary(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(argThis.ToBinary()));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToFileTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(argThis.ToFileTime()));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToFileTimeUtc(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setInt64((int)JSApi.SetType.Rval, (System.Int64)(argThis.ToFileTimeUtc()));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToLocalTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.ToLocalTime());
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToLongDateString(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setStringS((int)JSApi.SetType.Rval, argThis.ToLongDateString());
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToLongTimeString(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setStringS((int)JSApi.SetType.Rval, argThis.ToLongTimeString());
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToOADate(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setDouble((int)JSApi.SetType.Rval, (System.Double)(argThis.ToOADate()));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToShortDateString(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setStringS((int)JSApi.SetType.Rval, argThis.ToShortDateString());
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToShortTimeString(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setStringS((int)JSApi.SetType.Rval, argThis.ToShortTimeString());
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToString__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setStringS((int)JSApi.SetType.Rval, argThis.ToString(arg0, arg1));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToString__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.IFormatProvider arg0 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setStringS((int)JSApi.SetType.Rval, argThis.ToString(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToString__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setStringS((int)JSApi.SetType.Rval, argThis.ToString(arg0));
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToString(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSApi.setStringS((int)JSApi.SetType.Rval, argThis.ToString());
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_ToUniversalTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
System.DateTime argThis = (System.DateTime)vc.csObj;        JSMgr.datax.setObject((int)JSApi.SetType.Rval, argThis.ToUniversalTime());
        JSMgr.changeJSObj(vc.jsObjID, argThis);
    }

    return true;
}

static bool DateTime_Compare__DateTime__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.DateTime.Compare(arg0, arg1)));
    }

    return true;
}

static bool DateTime_DaysInMonth__Int32__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        System.Int32 arg1 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        JSApi.setInt32((int)JSApi.SetType.Rval, (System.Int32)(System.DateTime.DaysInMonth(arg0, arg1)));
    }

    return true;
}

static bool DateTime_Equals__DateTime__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.DateTime.Equals(arg0, arg1)));
    }

    return true;
}

static bool DateTime_FromBinary__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.DateTime.FromBinary(arg0));
    }

    return true;
}

static bool DateTime_FromFileTime__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.DateTime.FromFileTime(arg0));
    }

    return true;
}

static bool DateTime_FromFileTimeUtc__Int64(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int64 arg0 = (System.Int64)JSApi.getInt64((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.DateTime.FromFileTimeUtc(arg0));
    }

    return true;
}

static bool DateTime_FromOADate__Double(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Double arg0 = (System.Double)JSApi.getDouble((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.DateTime.FromOADate(arg0));
    }

    return true;
}

static bool DateTime_IsLeapYear__Int32(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.DateTime.IsLeapYear(arg0)));
    }

    return true;
}

static bool DateTime_op_Addition__DateTime__TimeSpan(JSVCall vc, int argc)
{
    System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    System.TimeSpan arg1 = (System.TimeSpan)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    JSMgr.datax.setObject((int)JSApi.SetType.Rval, arg0 + arg1);
    return true;
}

static bool DateTime_op_Equality__DateTime__DateTime(JSVCall vc, int argc)
{
    System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(arg0 == arg1));
    return true;
}

static bool DateTime_op_GreaterThan__DateTime__DateTime(JSVCall vc, int argc)
{
    System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(arg0 > arg1));
    return true;
}

static bool DateTime_op_GreaterThanOrEqual__DateTime__DateTime(JSVCall vc, int argc)
{
    System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(arg0 >= arg1));
    return true;
}

static bool DateTime_op_Inequality__DateTime__DateTime(JSVCall vc, int argc)
{
    System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(arg0 != arg1));
    return true;
}

static bool DateTime_op_LessThan__DateTime__DateTime(JSVCall vc, int argc)
{
    System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(arg0 < arg1));
    return true;
}

static bool DateTime_op_LessThanOrEqual__DateTime__DateTime(JSVCall vc, int argc)
{
    System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(arg0 <= arg1));
    return true;
}

static bool DateTime_op_Subtraction__DateTime__TimeSpan(JSVCall vc, int argc)
{
    System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    System.TimeSpan arg1 = (System.TimeSpan)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    JSMgr.datax.setObject((int)JSApi.SetType.Rval, arg0 - arg1);
    return true;
}

static bool DateTime_op_Subtraction__DateTime__DateTime(JSVCall vc, int argc)
{
    System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    System.DateTime arg1 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
    JSMgr.datax.setObject((int)JSApi.SetType.Rval, arg0 - arg1);
    return true;
}

static bool DateTime_Parse__String__IFormatProvider__DateTimeStyles(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Globalization.DateTimeStyles arg2 = (System.Globalization.DateTimeStyles)JSApi.getEnum((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.DateTime.Parse(arg0, arg1, arg2));
    }

    return true;
}

static bool DateTime_Parse__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.DateTime.Parse(arg0, arg1));
    }

    return true;
}

static bool DateTime_Parse__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.DateTime.Parse(arg0));
    }

    return true;
}

static bool DateTime_ParseExact__String__String_Array__IFormatProvider__DateTimeStyles(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String[] arg1 = JSDataExchangeMgr.GetJSArg<System.String[]>(() =>
    {
    int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
    int length = JSApi.getArrayLength(jsObjID);
    var ret = new System.String[length];
    for (var i = 0; i < length; i++) {
        JSApi.getElement(jsObjID, i);
        ret[i] = (System.String)JSApi.getStringS((int)JSApi.GetType.SaveAndRemove);
    }
    return ret;
})
;
        System.IFormatProvider arg2 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Globalization.DateTimeStyles arg3 = (System.Globalization.DateTimeStyles)JSApi.getEnum((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.DateTime.ParseExact(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool DateTime_ParseExact__String__String__IFormatProvider__DateTimeStyles(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg2 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Globalization.DateTimeStyles arg3 = (System.Globalization.DateTimeStyles)JSApi.getEnum((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.DateTime.ParseExact(arg0, arg1, arg2, arg3));
    }

    return true;
}

static bool DateTime_ParseExact__String__String__IFormatProvider(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 3) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg2 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.DateTime.ParseExact(arg0, arg1, arg2));
    }

    return true;
}

static bool DateTime_SpecifyKind__DateTime__DateTimeKind(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.DateTime arg0 = (System.DateTime)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.DateTimeKind arg1 = (System.DateTimeKind)JSApi.getEnum((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, System.DateTime.SpecifyKind(arg0, arg1));
    }

    return true;
}

static bool DateTime_TryParse__String__IFormatProvider__DateTimeStyles__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 4) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg1 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Globalization.DateTimeStyles arg2 = (System.Globalization.DateTimeStyles)JSApi.getEnum((int)JSApi.GetType.Arg);
        int r_arg3 = JSApi.incArgIndex();
        System.DateTime arg3;
        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.DateTime.TryParse(arg0, arg1, arg2, out arg3)));
        JSApi.setArgIndex(r_arg3);
        JSMgr.datax.setObject((int)JSApi.SetType.ArgRef, arg3);
    }

    return true;
}

static bool DateTime_TryParse__String__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        int r_arg1 = JSApi.incArgIndex();
        System.DateTime arg1;
        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.DateTime.TryParse(arg0, out arg1)));
        JSApi.setArgIndex(r_arg1);
        JSMgr.datax.setObject((int)JSApi.SetType.ArgRef, arg1);
    }

    return true;
}

static bool DateTime_TryParseExact__String__String_Array__IFormatProvider__DateTimeStyles__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 5) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String[] arg1 = JSDataExchangeMgr.GetJSArg<System.String[]>(() =>
    {
    int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
    int length = JSApi.getArrayLength(jsObjID);
    var ret = new System.String[length];
    for (var i = 0; i < length; i++) {
        JSApi.getElement(jsObjID, i);
        ret[i] = (System.String)JSApi.getStringS((int)JSApi.GetType.SaveAndRemove);
    }
    return ret;
})
;
        System.IFormatProvider arg2 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Globalization.DateTimeStyles arg3 = (System.Globalization.DateTimeStyles)JSApi.getEnum((int)JSApi.GetType.Arg);
        int r_arg4 = JSApi.incArgIndex();
        System.DateTime arg4;
        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.DateTime.TryParseExact(arg0, arg1, arg2, arg3, out arg4)));
        JSApi.setArgIndex(r_arg4);
        JSMgr.datax.setObject((int)JSApi.SetType.ArgRef, arg4);
    }

    return true;
}

static bool DateTime_TryParseExact__String__String__IFormatProvider__DateTimeStyles__DateTime(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 5) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.IFormatProvider arg2 = (System.IFormatProvider)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Globalization.DateTimeStyles arg3 = (System.Globalization.DateTimeStyles)JSApi.getEnum((int)JSApi.GetType.Arg);
        int r_arg4 = JSApi.incArgIndex();
        System.DateTime arg4;
        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(System.DateTime.TryParseExact(arg0, arg1, arg2, arg3, out arg4)));
        JSApi.setArgIndex(r_arg4);
        JSMgr.datax.setObject((int)JSApi.SetType.ArgRef, arg4);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(System.DateTime);
    ci.fields = new JSMgr.CSCallbackField[]
    {
        DateTime_MaxValue,
        DateTime_MinValue,

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        DateTime_Date,
        DateTime_Month,
        DateTime_Day,
        DateTime_DayOfWeek,
        DateTime_DayOfYear,
        DateTime_TimeOfDay,
        DateTime_Hour,
        DateTime_Minute,
        DateTime_Second,
        DateTime_Millisecond,
        DateTime_Now,
        DateTime_Ticks,
        DateTime_Today,
        DateTime_UtcNow,
        DateTime_Year,
        DateTime_Kind,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(DateTime_DateTime1, ".ctor"),
        new JSMgr.MethodCallBackInfo(DateTime_DateTime2, ".ctor"),
        new JSMgr.MethodCallBackInfo(DateTime_DateTime3, ".ctor"),
        new JSMgr.MethodCallBackInfo(DateTime_DateTime4, ".ctor"),
        new JSMgr.MethodCallBackInfo(DateTime_DateTime5, ".ctor"),
        new JSMgr.MethodCallBackInfo(DateTime_DateTime6, ".ctor"),
        new JSMgr.MethodCallBackInfo(DateTime_DateTime7, ".ctor"),
        new JSMgr.MethodCallBackInfo(DateTime_DateTime8, ".ctor"),
        new JSMgr.MethodCallBackInfo(DateTime_DateTime9, ".ctor"),
        new JSMgr.MethodCallBackInfo(DateTime_DateTime10, ".ctor"),
        new JSMgr.MethodCallBackInfo(DateTime_DateTime11, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(DateTime_Add__TimeSpan, "Add"),
        new JSMgr.MethodCallBackInfo(DateTime_AddDays__Double, "AddDays"),
        new JSMgr.MethodCallBackInfo(DateTime_AddHours__Double, "AddHours"),
        new JSMgr.MethodCallBackInfo(DateTime_AddMilliseconds__Double, "AddMilliseconds"),
        new JSMgr.MethodCallBackInfo(DateTime_AddMinutes__Double, "AddMinutes"),
        new JSMgr.MethodCallBackInfo(DateTime_AddMonths__Int32, "AddMonths"),
        new JSMgr.MethodCallBackInfo(DateTime_AddSeconds__Double, "AddSeconds"),
        new JSMgr.MethodCallBackInfo(DateTime_AddTicks__Int64, "AddTicks"),
        new JSMgr.MethodCallBackInfo(DateTime_AddYears__Int32, "AddYears"),
        new JSMgr.MethodCallBackInfo(DateTime_CompareTo__Object, "CompareTo"),
        new JSMgr.MethodCallBackInfo(DateTime_CompareTo__DateTime, "CompareTo"),
        new JSMgr.MethodCallBackInfo(DateTime_Equals__Object, "Equals"),
        new JSMgr.MethodCallBackInfo(DateTime_Equals__DateTime, "Equals"),
        new JSMgr.MethodCallBackInfo(DateTime_GetDateTimeFormats__Char__IFormatProvider, "GetDateTimeFormats"),
        new JSMgr.MethodCallBackInfo(DateTime_GetDateTimeFormats__IFormatProvider, "GetDateTimeFormats"),
        new JSMgr.MethodCallBackInfo(DateTime_GetDateTimeFormats__Char, "GetDateTimeFormats"),
        new JSMgr.MethodCallBackInfo(DateTime_GetDateTimeFormats, "GetDateTimeFormats"),
        new JSMgr.MethodCallBackInfo(DateTime_GetHashCode, "GetHashCode"),
        new JSMgr.MethodCallBackInfo(DateTime_GetTypeCode, "GetTypeCode"),
        new JSMgr.MethodCallBackInfo(DateTime_IsDaylightSavingTime, "IsDaylightSavingTime"),
        new JSMgr.MethodCallBackInfo(DateTime_Subtract__DateTime, "Subtract"),
        new JSMgr.MethodCallBackInfo(DateTime_Subtract__TimeSpan, "Subtract"),
        new JSMgr.MethodCallBackInfo(DateTime_ToBinary, "ToBinary"),
        new JSMgr.MethodCallBackInfo(DateTime_ToFileTime, "ToFileTime"),
        new JSMgr.MethodCallBackInfo(DateTime_ToFileTimeUtc, "ToFileTimeUtc"),
        new JSMgr.MethodCallBackInfo(DateTime_ToLocalTime, "ToLocalTime"),
        new JSMgr.MethodCallBackInfo(DateTime_ToLongDateString, "ToLongDateString"),
        new JSMgr.MethodCallBackInfo(DateTime_ToLongTimeString, "ToLongTimeString"),
        new JSMgr.MethodCallBackInfo(DateTime_ToOADate, "ToOADate"),
        new JSMgr.MethodCallBackInfo(DateTime_ToShortDateString, "ToShortDateString"),
        new JSMgr.MethodCallBackInfo(DateTime_ToShortTimeString, "ToShortTimeString"),
        new JSMgr.MethodCallBackInfo(DateTime_ToString__String__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(DateTime_ToString__IFormatProvider, "ToString"),
        new JSMgr.MethodCallBackInfo(DateTime_ToString__String, "ToString"),
        new JSMgr.MethodCallBackInfo(DateTime_ToString, "ToString"),
        new JSMgr.MethodCallBackInfo(DateTime_ToUniversalTime, "ToUniversalTime"),
        new JSMgr.MethodCallBackInfo(DateTime_Compare__DateTime__DateTime, "Compare"),
        new JSMgr.MethodCallBackInfo(DateTime_DaysInMonth__Int32__Int32, "DaysInMonth"),
        new JSMgr.MethodCallBackInfo(DateTime_Equals__DateTime__DateTime, "Equals"),
        new JSMgr.MethodCallBackInfo(DateTime_FromBinary__Int64, "FromBinary"),
        new JSMgr.MethodCallBackInfo(DateTime_FromFileTime__Int64, "FromFileTime"),
        new JSMgr.MethodCallBackInfo(DateTime_FromFileTimeUtc__Int64, "FromFileTimeUtc"),
        new JSMgr.MethodCallBackInfo(DateTime_FromOADate__Double, "FromOADate"),
        new JSMgr.MethodCallBackInfo(DateTime_IsLeapYear__Int32, "IsLeapYear"),
        new JSMgr.MethodCallBackInfo(DateTime_op_Addition__DateTime__TimeSpan, "op_Addition"),
        new JSMgr.MethodCallBackInfo(DateTime_op_Equality__DateTime__DateTime, "op_Equality"),
        new JSMgr.MethodCallBackInfo(DateTime_op_GreaterThan__DateTime__DateTime, "op_GreaterThan"),
        new JSMgr.MethodCallBackInfo(DateTime_op_GreaterThanOrEqual__DateTime__DateTime, "op_GreaterThanOrEqual"),
        new JSMgr.MethodCallBackInfo(DateTime_op_Inequality__DateTime__DateTime, "op_Inequality"),
        new JSMgr.MethodCallBackInfo(DateTime_op_LessThan__DateTime__DateTime, "op_LessThan"),
        new JSMgr.MethodCallBackInfo(DateTime_op_LessThanOrEqual__DateTime__DateTime, "op_LessThanOrEqual"),
        new JSMgr.MethodCallBackInfo(DateTime_op_Subtraction__DateTime__TimeSpan, "op_Subtraction"),
        new JSMgr.MethodCallBackInfo(DateTime_op_Subtraction__DateTime__DateTime, "op_Subtraction"),
        new JSMgr.MethodCallBackInfo(DateTime_Parse__String__IFormatProvider__DateTimeStyles, "Parse"),
        new JSMgr.MethodCallBackInfo(DateTime_Parse__String__IFormatProvider, "Parse"),
        new JSMgr.MethodCallBackInfo(DateTime_Parse__String, "Parse"),
        new JSMgr.MethodCallBackInfo(DateTime_ParseExact__String__String_Array__IFormatProvider__DateTimeStyles, "ParseExact"),
        new JSMgr.MethodCallBackInfo(DateTime_ParseExact__String__String__IFormatProvider__DateTimeStyles, "ParseExact"),
        new JSMgr.MethodCallBackInfo(DateTime_ParseExact__String__String__IFormatProvider, "ParseExact"),
        new JSMgr.MethodCallBackInfo(DateTime_SpecifyKind__DateTime__DateTimeKind, "SpecifyKind"),
        new JSMgr.MethodCallBackInfo(DateTime_TryParse__String__IFormatProvider__DateTimeStyles__DateTime, "TryParse"),
        new JSMgr.MethodCallBackInfo(DateTime_TryParse__String__DateTime, "TryParse"),
        new JSMgr.MethodCallBackInfo(DateTime_TryParseExact__String__String_Array__IFormatProvider__DateTimeStyles__DateTime, "TryParseExact"),
        new JSMgr.MethodCallBackInfo(DateTime_TryParseExact__String__String__IFormatProvider__DateTimeStyles__DateTime, "TryParseExact"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
