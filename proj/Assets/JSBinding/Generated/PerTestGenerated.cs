
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

using jsval = JSApi.jsval;

public class PerTestGenerated
{

////////////////////// PerTest ///////////////////////////////////////
// constructors

static bool PerTest_PerTest1(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 0)
    {
        JSMgr.addJSCSRel(_this, new PerTest());
    }

    return true;
}

static bool PerTest_PerTest2(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 1)
    {
        System.Int32 arg0 = (System.Int32)JSApi.getInt32((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new PerTest(arg0));
    }

    return true;
}

static bool PerTest_PerTest3(JSVCall vc, int argc)
{
    int _this = JSApi.getObject((int)JSApi.GetType.Arg);
    JSApi.attachFinalizerObject(_this);
    --argc;

    int len = argc;
    if (len == 1)
    {
        System.Collections.IEnumerable arg0 = (System.Collections.IEnumerable)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.addJSCSRel(_this, new PerTest(arg0));
    }

    return true;
}

// fields
static void PerTest_toggle(JSVCall vc)
{
    if (vc.bGet) {
        PerTest _this = (PerTest)vc.csObj;
        var result = _this.toggle;
        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
    }
    else {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        PerTest _this = (PerTest)vc.csObj;
        _this.toggle = arg0;
    }
}
static void PerTest_StaticObject(JSVCall vc)
{
    if (vc.bGet) {
        var result = PerTest.StaticObject;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
    }
    else {
        PerTest.RefObject arg0 = (PerTest.RefObject)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        PerTest.StaticObject = arg0;
    }
}

// properties

// methods

static bool PerTest_test123__Object_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Object[] arg0 = JSDataExchangeMgr.GetJSArg<System.Object[]>(() =>
    {
    int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
    int length = JSApi.getArrayLength(jsObjID);
    var ret = new System.Object[length];
    for (var i = 0; i < length; i++) {
        JSApi.getElement(jsObjID, i);
        ret[i] = (System.Object)JSMgr.datax.getWhatever((int)JSApi.GetType.SaveAndRemove);
    }
    return ret;
})
;
        PerTest.test123(arg0);
    }

    return true;
}

static bool PerTest_testRefParams__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        int r_arg0 = JSApi.getArgIndex();
System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.ArgRef);
        int r_arg1 = JSApi.incArgIndex();
        System.String arg1;
        PerTest.testRefParams(ref arg0, out arg1);
        JSApi.setArgIndex(r_arg1);
        JSApi.setStringS((int)JSApi.SetType.ArgRef, arg1);
    }

    return true;
}

static bool PerTest_testString__String_Array(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String[] arg0 = JSDataExchangeMgr.GetJSArg<System.String[]>(() =>
    {
    int jsObjID = JSApi.getObject((int)JSApi.GetType.Arg);
    int length = JSApi.getArrayLength(jsObjID);
    var ret = new System.String[length];
    for (var i = 0; i < length; i++) {
        JSApi.getElement(jsObjID, i);
        ret[i] = (System.String)JSApi.getStringS((int)JSApi.GetType.SaveAndRemove);
    }
    return ret;
})
;
        PerTest.testString(arg0);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(PerTest);
    ci.fields = new JSMgr.CSCallbackField[]
    {
        PerTest_toggle,
        PerTest_StaticObject,

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(PerTest_PerTest1, ".ctor"),
        new JSMgr.MethodCallBackInfo(PerTest_PerTest2, ".ctor"),
        new JSMgr.MethodCallBackInfo(PerTest_PerTest3, ".ctor"),

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(PerTest_test123__Object_Array, "test123"),
        new JSMgr.MethodCallBackInfo(PerTest_testRefParams__String__String, "testRefParams"),
        new JSMgr.MethodCallBackInfo(PerTest_testString__String_Array, "testString"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
