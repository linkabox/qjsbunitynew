
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by CSGenerator.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Xml;

using jsval = JSApi.jsval;

public class System_Xml_XmlNodeGenerated
{

////////////////////// XmlNode ///////////////////////////////////////
// constructors

// fields

// properties
static void XmlNode_Attributes(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.Attributes;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void XmlNode_BaseURI(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.BaseURI;
        JSApi.setStringS((int)JSApi.SetType.Rval, result);
}
static void XmlNode_ChildNodes(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.ChildNodes;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void XmlNode_FirstChild(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.FirstChild;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void XmlNode_HasChildNodes(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.HasChildNodes;
        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}
static void XmlNode_InnerText(JSVCall vc)
{
    if (vc.bGet)
    { 
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.InnerText;
        JSApi.setStringS((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        _this.InnerText = arg0;
    }
}
static void XmlNode_InnerXml(JSVCall vc)
{
    if (vc.bGet)
    { 
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.InnerXml;
        JSApi.setStringS((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        _this.InnerXml = arg0;
    }
}
static void XmlNode_IsReadOnly(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.IsReadOnly;
        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(result));
}
static void XmlNode_Item_String(JSVCall vc)
{
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this[arg0];
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void XmlNode_Item_String_String(JSVCall vc)
{
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this[arg0, arg1];
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void XmlNode_LastChild(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.LastChild;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void XmlNode_LocalName(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.LocalName;
        JSApi.setStringS((int)JSApi.SetType.Rval, result);
}
static void XmlNode_Name(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.Name;
        JSApi.setStringS((int)JSApi.SetType.Rval, result);
}
static void XmlNode_NamespaceURI(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.NamespaceURI;
        JSApi.setStringS((int)JSApi.SetType.Rval, result);
}
static void XmlNode_NextSibling(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.NextSibling;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void XmlNode_NodeType(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.NodeType;
        JSApi.setEnum((int)JSApi.SetType.Rval, (int)result);
}
static void XmlNode_OuterXml(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.OuterXml;
        JSApi.setStringS((int)JSApi.SetType.Rval, result);
}
static void XmlNode_OwnerDocument(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.OwnerDocument;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void XmlNode_ParentNode(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.ParentNode;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void XmlNode_Prefix(JSVCall vc)
{
    if (vc.bGet)
    { 
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.Prefix;
        JSApi.setStringS((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        _this.Prefix = arg0;
    }
}
static void XmlNode_PreviousSibling(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.PreviousSibling;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}
static void XmlNode_Value(JSVCall vc)
{
    if (vc.bGet)
    { 
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.Value;
        JSApi.setStringS((int)JSApi.SetType.Rval, result);
    }
    else
    { 
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        _this.Value = arg0;
    }
}
static void XmlNode_SchemaInfo(JSVCall vc)
{
        System.Xml.XmlNode _this = (System.Xml.XmlNode)vc.csObj;
        var result = _this.SchemaInfo;
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, result);
}

// methods

static bool XmlNode_AppendChild__XmlNode(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Xml.XmlNode arg0 = (System.Xml.XmlNode)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).AppendChild(arg0));
    }

    return true;
}

static bool XmlNode_Clone(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).Clone());
    }

    return true;
}

static bool XmlNode_CloneNode__Boolean(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Boolean arg0 = (System.Boolean)JSApi.getBooleanS((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).CloneNode(arg0));
    }

    return true;
}

static bool XmlNode_CreateNavigator(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).CreateNavigator());
    }

    return true;
}

static bool XmlNode_GetEnumerator(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).GetEnumerator());
    }

    return true;
}

static bool XmlNode_GetNamespaceOfPrefix__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        JSApi.setStringS((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).GetNamespaceOfPrefix(arg0));
    }

    return true;
}

static bool XmlNode_GetPrefixOfNamespace__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        JSApi.setStringS((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).GetPrefixOfNamespace(arg0));
    }

    return true;
}

static bool XmlNode_InsertAfter__XmlNode__XmlNode(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Xml.XmlNode arg0 = (System.Xml.XmlNode)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Xml.XmlNode arg1 = (System.Xml.XmlNode)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).InsertAfter(arg0, arg1));
    }

    return true;
}

static bool XmlNode_InsertBefore__XmlNode__XmlNode(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Xml.XmlNode arg0 = (System.Xml.XmlNode)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Xml.XmlNode arg1 = (System.Xml.XmlNode)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).InsertBefore(arg0, arg1));
    }

    return true;
}

static bool XmlNode_Normalize(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((System.Xml.XmlNode)vc.csObj).Normalize();
    }

    return true;
}

static bool XmlNode_PrependChild__XmlNode(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Xml.XmlNode arg0 = (System.Xml.XmlNode)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).PrependChild(arg0));
    }

    return true;
}

static bool XmlNode_RemoveAll(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 0) 
    {
        ((System.Xml.XmlNode)vc.csObj).RemoveAll();
    }

    return true;
}

static bool XmlNode_RemoveChild__XmlNode(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Xml.XmlNode arg0 = (System.Xml.XmlNode)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).RemoveChild(arg0));
    }

    return true;
}

static bool XmlNode_ReplaceChild__XmlNode__XmlNode(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.Xml.XmlNode arg0 = (System.Xml.XmlNode)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        System.Xml.XmlNode arg1 = (System.Xml.XmlNode)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).ReplaceChild(arg0, arg1));
    }

    return true;
}

static bool XmlNode_SelectNodes__String__XmlNamespaceManager(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Xml.XmlNamespaceManager arg1 = (System.Xml.XmlNamespaceManager)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).SelectNodes(arg0, arg1));
    }

    return true;
}

static bool XmlNode_SelectNodes__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).SelectNodes(arg0));
    }

    return true;
}

static bool XmlNode_SelectSingleNode__String__XmlNamespaceManager(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.Xml.XmlNamespaceManager arg1 = (System.Xml.XmlNamespaceManager)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).SelectSingleNode(arg0, arg1));
    }

    return true;
}

static bool XmlNode_SelectSingleNode__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        JSMgr.datax.setObject((int)JSApi.SetType.Rval, ((System.Xml.XmlNode)vc.csObj).SelectSingleNode(arg0));
    }

    return true;
}

static bool XmlNode_Supports__String__String(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 2) 
    {
        System.String arg0 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        System.String arg1 = (System.String)JSApi.getStringS((int)JSApi.GetType.Arg);
        JSApi.setBooleanS((int)JSApi.SetType.Rval, (System.Boolean)(((System.Xml.XmlNode)vc.csObj).Supports(arg0, arg1)));
    }

    return true;
}

static bool XmlNode_WriteContentTo__XmlWriter(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Xml.XmlWriter arg0 = (System.Xml.XmlWriter)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        ((System.Xml.XmlNode)vc.csObj).WriteContentTo(arg0);
    }

    return true;
}

static bool XmlNode_WriteTo__XmlWriter(JSVCall vc, int argc)
{
    int len = argc;
    if (len == 1) 
    {
        System.Xml.XmlWriter arg0 = (System.Xml.XmlWriter)JSMgr.datax.getObject((int)JSApi.GetType.Arg);
        ((System.Xml.XmlNode)vc.csObj).WriteTo(arg0);
    }

    return true;
}


//register

public static void __Register()
{
    JSMgr.CallbackInfo ci = new JSMgr.CallbackInfo();
    ci.type = typeof(System.Xml.XmlNode);
    ci.fields = new JSMgr.CSCallbackField[]
    {

    };
    ci.properties = new JSMgr.CSCallbackProperty[]
    {
        XmlNode_Attributes,
        XmlNode_BaseURI,
        XmlNode_ChildNodes,
        XmlNode_FirstChild,
        XmlNode_HasChildNodes,
        XmlNode_InnerText,
        XmlNode_InnerXml,
        XmlNode_IsReadOnly,
        XmlNode_Item_String,
        XmlNode_Item_String_String,
        XmlNode_LastChild,
        XmlNode_LocalName,
        XmlNode_Name,
        XmlNode_NamespaceURI,
        XmlNode_NextSibling,
        XmlNode_NodeType,
        XmlNode_OuterXml,
        XmlNode_OwnerDocument,
        XmlNode_ParentNode,
        XmlNode_Prefix,
        XmlNode_PreviousSibling,
        XmlNode_Value,
        XmlNode_SchemaInfo,

    };
    ci.constructors = new JSMgr.MethodCallBackInfo[]
    {

    };
    ci.methods = new JSMgr.MethodCallBackInfo[]
    {
        new JSMgr.MethodCallBackInfo(XmlNode_AppendChild__XmlNode, "AppendChild"),
        new JSMgr.MethodCallBackInfo(XmlNode_Clone, "Clone"),
        new JSMgr.MethodCallBackInfo(XmlNode_CloneNode__Boolean, "CloneNode"),
        new JSMgr.MethodCallBackInfo(XmlNode_CreateNavigator, "CreateNavigator"),
        new JSMgr.MethodCallBackInfo(XmlNode_GetEnumerator, "GetEnumerator"),
        new JSMgr.MethodCallBackInfo(XmlNode_GetNamespaceOfPrefix__String, "GetNamespaceOfPrefix"),
        new JSMgr.MethodCallBackInfo(XmlNode_GetPrefixOfNamespace__String, "GetPrefixOfNamespace"),
        new JSMgr.MethodCallBackInfo(XmlNode_InsertAfter__XmlNode__XmlNode, "InsertAfter"),
        new JSMgr.MethodCallBackInfo(XmlNode_InsertBefore__XmlNode__XmlNode, "InsertBefore"),
        new JSMgr.MethodCallBackInfo(XmlNode_Normalize, "Normalize"),
        new JSMgr.MethodCallBackInfo(XmlNode_PrependChild__XmlNode, "PrependChild"),
        new JSMgr.MethodCallBackInfo(XmlNode_RemoveAll, "RemoveAll"),
        new JSMgr.MethodCallBackInfo(XmlNode_RemoveChild__XmlNode, "RemoveChild"),
        new JSMgr.MethodCallBackInfo(XmlNode_ReplaceChild__XmlNode__XmlNode, "ReplaceChild"),
        new JSMgr.MethodCallBackInfo(XmlNode_SelectNodes__String__XmlNamespaceManager, "SelectNodes"),
        new JSMgr.MethodCallBackInfo(XmlNode_SelectNodes__String, "SelectNodes"),
        new JSMgr.MethodCallBackInfo(XmlNode_SelectSingleNode__String__XmlNamespaceManager, "SelectSingleNode"),
        new JSMgr.MethodCallBackInfo(XmlNode_SelectSingleNode__String, "SelectSingleNode"),
        new JSMgr.MethodCallBackInfo(XmlNode_Supports__String__String, "Supports"),
        new JSMgr.MethodCallBackInfo(XmlNode_WriteContentTo__XmlWriter, "WriteContentTo"),
        new JSMgr.MethodCallBackInfo(XmlNode_WriteTo__XmlWriter, "WriteTo"),

    };
    JSMgr.allCallbackInfo.Add(ci);
}


}
